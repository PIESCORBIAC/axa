<?xml version="1.0" encoding="utf-8"?>
<Configuration>
  <SelectionSets>
    <SelectionSet>
      <Name>AvailableDrivesFromDriveEnclosures</Name>
      <Types>
        <TypeName>HPOneView.Storage.AvailableDiskDrive</TypeName>
      </Types>
    </SelectionSet>
  </SelectionSets>
  <Controls>
    <!--AvailableDrivesFromDriveEnclosures-GroupingFormat-->
    <Control>
      <Name>AvailableDrivesFromDriveEnclosures-GroupingFormat</Name>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <Frame>
                <LeftIndent>4</LeftIndent>
                <CustomItem>
                  <Text>SASLogicalInterconnectName: </Text>
                  <ExpressionBinding>
                    <PropertyName>SASLogicalInterconnectName</PropertyName>
                  </ExpressionBinding>
                  <NewLine/>
                </CustomItem>
              </Frame>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </Control>
  </Controls>
  <ViewDefinitions>
    <!--ManagedSan.Zone FT-->
    <View>
      <Name>ManagedSanZone</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Members</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ManagedSan</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.Members.Name</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--ManagedSan.Zone FL-->
    <View>
      <Name>ManagedSanZone</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SAN</Label>
                <PropertyName>ManagedSAN</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>State</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Members</Label>
                <PropertyName>Members</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Created</Label>
                <PropertyName>Created</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Modified</Label>
                <PropertyName>Modified</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--ManagedSan.Zone.Alias FT-->
    <View>
      <Name>ManagedSanZoneAlias</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone.Alias</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>WWN</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--ManagedSan.Zone.Alias FL-->
    <View>
      <Name>ManagedSanZoneAlias</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone.Alias</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>WWN</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.San.Endpoint FT-->
    <View>
      <Name>Endpoint</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.San.Endpoint</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Port Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Online</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SAN Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zone Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>wwn</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>portType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>isOnline</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>sanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>zoneName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Profile.SanVolume FT-->
    <View>
      <Name>sanvolumes</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Profile.SanVolume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Volume ID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Volume Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LUN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Pool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>lunType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeStoragePoolUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} GB" -f ($profileCache[$_.volumeUri].provisionedCapacity / 1gb)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].provisionType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($profileCache[$_.volumeUri].shareable) { "{0}" -f "Shared" } else { "{0}" -f "Private" }</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FT-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProvisioningType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StoragePool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SnapshotPool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Used By</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>provisioningType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.isShareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-HPOVRequest -Uri (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
               <TableColumnItem>
                <ScriptBlock>
                if (-not([String]::IsNullOrEmpty($_.deviceSpecificAttributes.snapshotPoolUri)))
                {
                  (Send-HPOVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).name
                }  
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $associationProfileToVol = (Send-HPOVRequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-HPOVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FL-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LunWwn</Label>
                <PropertyName>lunWwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisioningType</Label>
                <PropertyName>provisioningType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisionedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AllocatedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Sharing</Label>
                <ScriptBlock>
                  if ($_.isShareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>(Send-HPOVRequest -Uri (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StoragePool</Label>
                <ScriptBlock>
                  (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SnapshotPool</Label>
                <ScriptBlock>
                  if (-not([String]::IsNullOrEmpty($_.deviceSpecificAttributes.snapshotPoolUri)))
                  {
                    (Send-HPOVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).name
                  }  
                </ScriptBlock>
              </ListItem>                
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>'{0}' -f (Send-HPOVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystemVolumeName</Label>
                <PropertyName>deviceVolumeName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Used By</Label>
                <ScriptBlock>
                  $associationProfileToVol = (Send-HPOVRequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-HPOVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.VolumeTemplate FT-->
    <View>
      <Name>VolumeTemplate</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeTemplate</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProvisionedType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StoragePool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SnapshotPool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.properties.size.default / 1GB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0}' -f $_.properties.provisioningType.default</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.properties.isShareable.default) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.compatibleStorageSystemsUri -Hostname $_.ApplianceConnection.Name).members.displayName</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
               <TableColumnItem>
                <ScriptBlock>
                if (-not([String]::IsNullOrEmpty($_.properties.snapshotPool.default)))
                {
                  (Send-HPOVRequest $_.properties.snapshotPool.default -Hostname $_.ApplianceConnection.Name).name
                }  
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.VolumeTemplate FL-->
    <View>
      <Name>VolumeTemplate</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeTemplate</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisioningType</Label>
                <ScriptBlock>'{0}' -f $_.properties.provisioningType.default</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ProvisionedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.properties.size.default / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Sharing</Label>
                <ScriptBlock>
                  if ($_.properties.isShareable.default) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.compatibleStorageSystemsUri -Hostname $_.ApplianceConnection.Name).members.displayName</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StoragePool</Label>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SnapshotPool</Label>
                <ScriptBlock>
                  if (-not([String]::IsNullOrEmpty($_.properties.snapshotPool.default)))
                  {
                    (Send-HPOVRequest $_.properties.snapshotPool.default -Hostname $_.ApplianceConnection.Name).name
                  }  
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystemVolumeName</Label>
                <PropertyName>deviceVolumeName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.VolumeSnapshot FT-->
    <View>
      <Name>StorageVolumeSnapshot</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeSnapshot</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ParentVolume</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-HPOVRequest $_.storageVolumeUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.capacity / 1GB)</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.VolumeSnapshot FL-->
    <View>
      <Name>StorageVolumeSnapshot</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeSnapshot</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>"{0}" -f $_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Parent Volume</Label>
                <ScriptBlock>(Send-HPOVRequest $_.storageVolumeUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Capacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.capacity / 1GB)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.DiscoveredPool FT-->
    <View>
      <Name>StorageSystemDiscoveredPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.DiscoveredPool</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RAID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Total</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Allocated</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>domain</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>raidLevel</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.DiscoveredPool FL-->
    <View>
      <Name>StorageSystemDiscoveredPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.DiscoveredPool</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-HPOVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DriveType</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Total</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volumes</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?category=storage-volumes&amp;query=storage_volume_storagepool_uri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VolumeTemplates</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?sort=name:asc&amp;category=storage-volume-templates&amp;query=storagePoolUri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.StoragePool FT-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.StoragePool</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RAID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Total</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Allocated</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-HPOVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.StoragePool FL-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.StoragePool</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-HPOVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DriveType</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Total</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volumes</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?category=storage-volumes&amp;query=storage_volume_storagepool_uri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VolumeTemplates</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?sort=name:asc&amp;category=storage-volume-templates&amp;query=storagePoolUri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.SanManager FT-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Managed SANs</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>providerDisplayName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceManagerVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                    $resp = Send-HPOVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                    foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                    $managedSans
                    
                  }

                  else { "None" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.SanManager FL-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>providerDisplayName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Version</Label>
                <PropertyName>deviceManagerVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Managed SANs</Label>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                  $resp = Send-HPOVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                  foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                  $managedSans

                  }

                  else { "None" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View> 
    <!--Storage.ManagedSan FT-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PrincipleSwitch</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Networks</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zoned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>AutomateZoning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ZoningPolicy</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>UseAliases</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>principalSwitch</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.associatedNetworks.name -join ', '</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>zoningState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.sanPolicy.zoningPolicy</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.ManagedSan FL-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PrincipalSwitch</Label>
                <PropertyName>principalSwitch</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Networks</Label>
                <ScriptBlock>$_.associatedNetworks.name -join ', '</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Zoned</Label>
                <PropertyName>zoningState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>AutomateZoning</Label>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ZoningPolicy</Label>
                <ScriptBlock>$_.sanPolicy.zoningPolicy</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Use Aliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System FT-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Family</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ManagedDomain</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Firmware</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
         </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>family</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.serialNumber</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.model</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.managedDomain</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.wwn</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.firmware</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System FL-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ManagedDomain</Label>
                <PropertyName>managedDomain</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Firmware</Label>
                <PropertyName>firmware</PropertyName>
              </ListItem>
              <ListItem>
                <Label>TotalCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.totalCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AllocatedCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.allocatedCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>FreeCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.freeCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>UseAliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.Port FT-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Mode</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ConnectionState</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Address</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ExpectedSAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ActualSAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PortGroup</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$StorageSystemPortModeEnum[$_.mode]</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>connectionState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>protocolType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>expectedSanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>actualSanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>groupName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.Port FL-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>portName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>protocolType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Address</Label>
                <PropertyName>address</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ExpectedNetwork</Label>
                <PropertyName>expectedNetworkName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ActualNetwork</Label>
                <ScriptBlock>
                  if ($_.actualNetworkUri -and (-not($_.actualNetworkUri -eq "unknown")))
                  {
                  $net = Send-HPOVRequest $_.actualNetworkUri -Hostname $_.ApplianceConnection.Name
                  if ($net.fabricType -eq "FabricAttach") {"$($net.name) [FA]"}
                  else {" $($net.name) [DA]"}
                  }
                  else { $_.actualNetworkUri }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PortGroup</Label>
                <PropertyName>groupName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure FT-->
    <View>
      <Name>DriveEnclosure</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveBays</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>I/OAdapters</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>powerState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ioAdapterCount</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure FL-->
    <View>
      <Name>DriveEnclosure</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>powerState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DriveBays</Label>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>I/OAdapters</Label>
                <PropertyName>ioAdapterCount</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>

    <!--Storage.DriveEnclosure.IoAdapter FT-->
    <View>
      <Name>DriveEnclosureIoAdapter</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.IoAdapter</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveBays</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>I/OAdapters</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>powerState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ioAdapterCount</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.IoAdapter FL-->
    <View>
      <Name>DriveEnclosureIoAdapter</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.IoAdapter</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>powerState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DriveBays</Label>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>I/OAdapters</Label>
                <PropertyName>ioAdapterCount</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay FT-->
    <View>
      <Name>DriveBay</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Drive</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.drive.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay FL-->
    <View>
      <Name>DriveBay</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Drive</Label>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.drive.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay.Drive FT-->
    <View>
      <Name>DriveBayDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay.Drive</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Firmware</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>firmwareVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay.Drive FL-->
    <View>
      <Name>DriveBayDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay.Drive</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Interface</Label>
                <PropertyName>deviceInterface</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>driveMedia</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Connectivity</Label>
                <ScriptBlock>'{0}Gbps' -f $_.linkRateInGbs</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>rotationalRpms</Label>
                <ScriptBlock>'{0:00}K' -f ($_.rotationalRpms / 1000)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Drive</Label>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Firmware</Label>
                <PropertyName>firmwareVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.AvailableDiskDrive FT-->
    <View>
      <Name>AvailableDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.AvailableDiskDrive</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>type</PropertyName>
        <CustomControlName>AvailableDrivesFromDriveEnclosures-GroupingFormat</CustomControlName>
      </GroupBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NumberAvailable</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Type</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Capacity</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NumberAvailable</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!-- HPOneView.Storage.LogicalJBOD FT-->
    <View>
      <Name>LogicalJBOD</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.LogicalJBOD</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveTechnology</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MinSize</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MaxSize</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>UsedBy</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Drives</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} {1}" -f $_.Interface, $_.Media</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.MinSize * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.MaxSize * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>UsedBy</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Drives</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View> 
    <!-- HPOneView.Storage.Drive FT-->
    <View>
      <Name>Drive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Drive</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LogicalJbodName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SerialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.Capacity * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LogicalJbodName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View> 
    <!-- HPOneView.Storage.AvailableDriveType FT-->
    <View>
      <Name>AvailableDriveType</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.AvailableDriveType</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SASLogicalInterconnectName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NumberAvailable</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>SASLogicalInterconnectName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Type</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.Capacity * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NumberAvailable</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View> 



  </ViewDefinitions>
</Configuration>
<!-- SIG # Begin signature block -->
<!-- MIIjGQYJKoZIhvcNAQcCoIIjCjCCIwYCAQExDzANBglghkgBZQMEAgEFADB5Bgor -->
<!-- BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG -->
<!-- KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCCWl908eSQ5H2L6 -->
<!-- RxRvqnyz85O06rQ/tnV9aQXzC6RB06CCHiIwggVhMIIESaADAgECAhB2TE55PkNI -->
<!-- O10XEYNqkr0BMA0GCSqGSIb3DQEBCwUAMHwxCzAJBgNVBAYTAkdCMRswGQYDVQQI -->
<!-- ExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGDAWBgNVBAoT -->
<!-- D1NlY3RpZ28gTGltaXRlZDEkMCIGA1UEAxMbU2VjdGlnbyBSU0EgQ29kZSBTaWdu -->
<!-- aW5nIENBMB4XDTIwMDEyOTAwMDAwMFoXDTIxMDEyODIzNTk1OVowgdIxCzAJBgNV -->
<!-- BAYTAlVTMQ4wDAYDVQQRDAU5NDMwNDELMAkGA1UECAwCQ0ExEjAQBgNVBAcMCVBh -->
<!-- bG8gQWx0bzEcMBoGA1UECQwTMzAwMCBIYW5vdmVyIFN0cmVldDErMCkGA1UECgwi -->
<!-- SGV3bGV0dCBQYWNrYXJkIEVudGVycHJpc2UgQ29tcGFueTEaMBgGA1UECwwRSFAg -->
<!-- Q3liZXIgU2VjdXJpdHkxKzApBgNVBAMMIkhld2xldHQgUGFja2FyZCBFbnRlcnBy -->
<!-- aXNlIENvbXBhbnkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvRDPh -->
<!-- KKeABVHX3uR8gbgwJRObEp72PUbtdRaTIiZfmgrd6zGNv4Jm/Y7NaAbJU4zqBVgE -->
<!-- jxheJu7zMlsqOwCtPmocdi9MNIbY/pkFJ7DxM3kLejDGB1u0cHaDUL0EiyzDTzIC -->
<!-- 7XtsIGw/BOLrRjqKsDGRNytiaNSt//acldDLq2z1CZmAYMQfkvJ0yjGARFTGb2Ti -->
<!-- tXrIu7nXjU8KrBrEyyUVDPS8w3MMhTq+ot/XjCl9TF0akN4foJm5AVS9ByKSpiae -->
<!-- RUY94wRMMiBBkbmZ2tLUs3Dq1u4eOyGXCBRgnOdymrn13JTTV4FOcWh7VisEG68x -->
<!-- 2BSyrS/HGsDCYQYbAgMBAAGjggGGMIIBgjAfBgNVHSMEGDAWgBQO4TqoUzox1Yq+ -->
<!-- wbutZxoDha00DjAdBgNVHQ4EFgQUh4Yh6Id9YrSze2lDYQHnUSpKqUYwDgYDVR0P -->
<!-- AQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYJ -->
<!-- YIZIAYb4QgEBBAQDAgQQMEAGA1UdIAQ5MDcwNQYMKwYBBAGyMQECAQMCMCUwIwYI -->
<!-- KwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMEMGA1UdHwQ8MDowOKA2 -->
<!-- oDSGMmh0dHA6Ly9jcmwuc2VjdGlnby5jb20vU2VjdGlnb1JTQUNvZGVTaWduaW5n -->
<!-- Q0EuY3JsMHMGCCsGAQUFBwEBBGcwZTA+BggrBgEFBQcwAoYyaHR0cDovL2NydC5z -->
<!-- ZWN0aWdvLmNvbS9TZWN0aWdvUlNBQ29kZVNpZ25pbmdDQS5jcnQwIwYIKwYBBQUH -->
<!-- MAGGF2h0dHA6Ly9vY3NwLnNlY3RpZ28uY29tMA0GCSqGSIb3DQEBCwUAA4IBAQAv -->
<!-- 2YEjwnu/UrMtMhKcSzUuwDgDoMyK8X40qdzOHED1jq1o7AUkz3fVI1BvT6xQdfRU -->
<!-- yk1v+EkfM3LXsgc+U3sXt0U0BuDWyXfa1LgcU3DGnDk26R1EZyGQ4/rtrIh6nf/p -->
<!-- JMmd+Exowu1qvObVgJi6miAXS58T4Pq5Pptn7E4t2gwXfkSdNVgwiSYZEAo/nlj5 -->
<!-- W3SgUF7FsBRpQH9fvQFvRjXeKFYjYiXCnOQd2rmwtKj51++Fmpn+5bqUoeltHrSG -->
<!-- Wqw8ACgj1ZsC0QfxoIT6Cu29N3Kf/Odgk/Gm0f5zVdPUGGUFpPbRaT8OyMF8hx9G -->
<!-- sN6uUOLceuLXLZq6CIJmMIIFgTCCBGmgAwIBAgIQOXJEOvkit1HX02wQ3TE1lTAN -->
<!-- BgkqhkiG9w0BAQwFADB7MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBN -->
<!-- YW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg -->
<!-- TGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTE5 -->
<!-- MDMxMjAwMDAwMFoXDTI4MTIzMTIzNTk1OVowgYgxCzAJBgNVBAYTAlVTMRMwEQYD -->
<!-- VQQIEwpOZXcgSmVyc2V5MRQwEgYDVQQHEwtKZXJzZXkgQ2l0eTEeMBwGA1UEChMV -->
<!-- VGhlIFVTRVJUUlVTVCBOZXR3b3JrMS4wLAYDVQQDEyVVU0VSVHJ1c3QgUlNBIENl -->
<!-- cnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC -->
<!-- CgKCAgEAgBJlFzYOw9sIs9CsVw127c0n00ytUINh4qogTQktZAnczomfzD2p7PbP -->
<!-- wdzx07HWezcoEStH2jnGvDoZtF+mvX2do2NCtnbyqTsrkfjib9DsFiCQCT7i6HTJ -->
<!-- GLSR1GJk23+jBvGIGGqQIjy8/hPwhxR79uQfjtTkUcYRZ0YIUcuGFFQ/vDP+fmyc -->
<!-- /xadGL1RjjWmp2bIcmfbIWax1Jt4A8BQOujM8Ny8nkz+rwWWNR9XWrf/zvk9tyy2 -->
<!-- 9lTdyOcSOk2uTIq3XJq0tyA9yn8iNK5+O2hmAUTnAU5GU5szYPeUvlM3kHND8zLD -->
<!-- U+/bqv50TmnHa4xgk97Exwzf4TKuzJM7UXiVZ4vuPVb+DNBpDxsP8yUmazNt925H -->
<!-- +nND5X4OpWaxKXwyhGNVicQNwZNUMBkTrNN9N6frXTpsNVzbQdcS2qlJC9/YgIoJ -->
<!-- k2KOtWbPJYjNhLixP6Q5D9kCnusSTJV882sFqV4Wg8y4Z+LoE53MW4LTTLPtW//e -->
<!-- 5XOsIzstAL81VXQJSdhJWBp/kjbmUZIO8yZ9HE0XvMnsQybQv0FfQKlERPSZ51eH -->
<!-- nlAfV1SoPv10Yy+xUGUJ5lhCLkMaTLTwJUdZ+gQek9QmRkpQgbLevni3/GcV4clX -->
<!-- hB4PY9bpYrrWX1Uu6lzGKAgEJTm4Diup8kyXHAc/DVL17e8vgg8CAwEAAaOB8jCB -->
<!-- 7zAfBgNVHSMEGDAWgBSgEQojPpbxB+zirynvgqV/0DCktDAdBgNVHQ4EFgQUU3m/ -->
<!-- WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMB -->
<!-- Af8wEQYDVR0gBAowCDAGBgRVHSAAMEMGA1UdHwQ8MDowOKA2oDSGMmh0dHA6Ly9j -->
<!-- cmwuY29tb2RvY2EuY29tL0FBQUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDQGCCsG -->
<!-- AQUFBwEBBCgwJjAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29t -->
<!-- MA0GCSqGSIb3DQEBDAUAA4IBAQAYh1HcdCE9nIrgJ7cz0C7M7PDmy14R3iJvm3WO -->
<!-- nnL+5Nb+qh+cli3vA0p+rvSNb3I8QzvAP+u431yqqcau8vzY7qN7Q/aGNnwU4M30 -->
<!-- 9z/+3ri0ivCRlv79Q2R+/czSAaF9ffgZGclCKxO/WIu6pKJmBHaIkU4MiRTOok3J -->
<!-- MrO66BQavHHxW/BBC5gACiIDEOUMsfnNkjcZ7Tvx5Dq2+UUTJnWvu6rvP3t3O9LE -->
<!-- ApE9GQDTF1w52z97GA1FzZOFli9d31kWTz9RvdVFGD/tSo7oBmF0Ixa1DVBzJ0RH -->
<!-- fxBdiSprhTEUxOipakyAvGp4z7h/jnZymQyd/teRCBaho1+VMIIF9TCCA92gAwIB -->
<!-- AgIQHaJIMG+bJhjQguCWfTPTajANBgkqhkiG9w0BAQwFADCBiDELMAkGA1UEBhMC -->
<!-- VVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4w -->
<!-- HAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVz -->
<!-- dCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTgxMTAyMDAwMDAwWhcN -->
<!-- MzAxMjMxMjM1OTU5WjB8MQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3JlYXRlciBN -->
<!-- YW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRgwFgYDVQQKEw9TZWN0aWdvIExp -->
<!-- bWl0ZWQxJDAiBgNVBAMTG1NlY3RpZ28gUlNBIENvZGUgU2lnbmluZyBDQTCCASIw -->
<!-- DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIYijTKFehifSfCWL2MIHi3cfJ8U -->
<!-- z+MmtiVmKUCGVEZ0MWLFEO2yhyemmcuVMMBW9aR1xqkOUGKlUZEQauBLYq798PgY -->
<!-- rKf/7i4zIPoMGYmobHutAMNhodxpZW0fbieW15dRhqb0J+V8aouVHltg1X7XFpKc -->
<!-- AC9o95ftanK+ODtj3o+/bkxBXRIgCFnoOc2P0tbPBrRXBbZOoT5Xax+YvMRi1hsL -->
<!-- jcdmG0qfnYHEckC14l/vC0X/o84Xpi1VsLewvFRqnbyNVlPG8Lp5UEks9wO5/i9l -->
<!-- NfIi6iwHr0bZ+UYc3Ix8cSjz/qfGFN1VkW6KEQ3fBiSVfQ+noXw62oY1YdMCAwEA -->
<!-- AaOCAWQwggFgMB8GA1UdIwQYMBaAFFN5v1qqK0rPVIDh2JvAnfKyA2bLMB0GA1Ud -->
<!-- DgQWBBQO4TqoUzox1Yq+wbutZxoDha00DjAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0T -->
<!-- AQH/BAgwBgEB/wIBADAdBgNVHSUEFjAUBggrBgEFBQcDAwYIKwYBBQUHAwgwEQYD -->
<!-- VR0gBAowCDAGBgRVHSAAMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwudXNl -->
<!-- cnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FDZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNy -->
<!-- bDB2BggrBgEFBQcBAQRqMGgwPwYIKwYBBQUHMAKGM2h0dHA6Ly9jcnQudXNlcnRy -->
<!-- dXN0LmNvbS9VU0VSVHJ1c3RSU0FBZGRUcnVzdENBLmNydDAlBggrBgEFBQcwAYYZ -->
<!-- aHR0cDovL29jc3AudXNlcnRydXN0LmNvbTANBgkqhkiG9w0BAQwFAAOCAgEATWNQ -->
<!-- 7Uc0SmGk295qKoyb8QAAHh1iezrXMsL2s+Bjs/thAIiaG20QBwRPvrjqiXgi6w9G -->
<!-- 7PNGXkBGiRL0C3danCpBOvzW9Ovn9xWVM8Ohgyi33i/klPeFM4MtSkBIv5rCT0qx -->
<!-- jyT0s4E307dksKYjalloUkJf/wTr4XRleQj1qZPea3FAmZa6ePG5yOLDCBaxq2Na -->
<!-- yBWAbXReSnV+pbjDbLXP30p5h1zHQE1jNfYw08+1Cg4LBH+gS667o6XQhACTPlNd -->
<!-- NKUANWlsvp8gJRANGftQkGG+OY96jk32nw4e/gdREmaDJhlIlc5KycF/8zoFm/lv -->
<!-- 34h/wCOe0h5DekUxwZxNqfBZslkZ6GqNKQQCd3xLS81wvjqyVVp4Pry7bwMQJXcV -->
<!-- NIr5NsxDkuS6T/FikyglVyn7URnHoSVAaoRXxrKdsbwcCtp8Z359LukoTBh+xHsx -->
<!-- QXGaSynsCz1XUNLK3f2eBVHlRHjdAd6xdZgNVCT98E7j4viDvXK6yz067vBeF5Jo -->
<!-- bchh+abxKgoLpbn0nu6YMgWFnuv5gynTxix9vTp3Los3QqBqgu07SqqUEKThDfgX -->
<!-- xbZaeTMYkuO1dfih6Y4KJR7kHvGfWocj/5+kUZ77OYARzdu1xKeogG/lU9Tg46LC -->
<!-- 0lsa+jImLWpXcBw8pFguo/NbSwfcMlnzh6cabVgwggZqMIIFUqADAgECAhADAZoC -->
<!-- Ov9YsWvW1ermF/BmMA0GCSqGSIb3DQEBBQUAMGIxCzAJBgNVBAYTAlVTMRUwEwYD -->
<!-- VQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xITAf -->
<!-- BgNVBAMTGERpZ2lDZXJ0IEFzc3VyZWQgSUQgQ0EtMTAeFw0xNDEwMjIwMDAwMDBa -->
<!-- Fw0yNDEwMjIwMDAwMDBaMEcxCzAJBgNVBAYTAlVTMREwDwYDVQQKEwhEaWdpQ2Vy -->
<!-- dDElMCMGA1UEAxMcRGlnaUNlcnQgVGltZXN0YW1wIFJlc3BvbmRlcjCCASIwDQYJ -->
<!-- KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKNkXfx8s+CCNeDg9sYq5kl1O8xu4FOp -->
<!-- nx9kWeZ8a39rjJ1V+JLjntVaY1sCSVDZg85vZu7dy4XpX6X51Id0iEQ7Gcnl9ZGf -->
<!-- xhQ5rCTqqEsskYnMXij0ZLZQt/USs3OWCmejvmGfrvP9Enh1DqZbFP1FI46GRFV9 -->
<!-- GIYFjFWHeUhG98oOjafeTl/iqLYtWQJhiGFyGGi5uHzu5uc0LzF3gTAfuzYBje8n -->
<!-- 4/ea8EwxZI3j6/oZh6h+z+yMDDZbesF6uHjHyQYuRhDIjegEYNu8c3T6Ttj+qkDx -->
<!-- ss5wRoPp2kChWTrZFQlXmVYwk/PJYczQCMxr7GJCkawCwO+k8IkRj3cCAwEAAaOC -->
<!-- AzUwggMxMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQM -->
<!-- MAoGCCsGAQUFBwMIMIIBvwYDVR0gBIIBtjCCAbIwggGhBglghkgBhv1sBwEwggGS -->
<!-- MCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy5kaWdpY2VydC5jb20vQ1BTMIIBZAYI -->
<!-- KwYBBQUHAgIwggFWHoIBUgBBAG4AeQAgAHUAcwBlACAAbwBmACAAdABoAGkAcwAg -->
<!-- AEMAZQByAHQAaQBmAGkAYwBhAHQAZQAgAGMAbwBuAHMAdABpAHQAdQB0AGUAcwAg -->
<!-- AGEAYwBjAGUAcAB0AGEAbgBjAGUAIABvAGYAIAB0AGgAZQAgAEQAaQBnAGkAQwBl -->
<!-- AHIAdAAgAEMAUAAvAEMAUABTACAAYQBuAGQAIAB0AGgAZQAgAFIAZQBsAHkAaQBu -->
<!-- AGcAIABQAGEAcgB0AHkAIABBAGcAcgBlAGUAbQBlAG4AdAAgAHcAaABpAGMAaAAg -->
<!-- AGwAaQBtAGkAdAAgAGwAaQBhAGIAaQBsAGkAdAB5ACAAYQBuAGQAIABhAHIAZQAg -->
<!-- AGkAbgBjAG8AcgBwAG8AcgBhAHQAZQBkACAAaABlAHIAZQBpAG4AIABiAHkAIABy -->
<!-- AGUAZgBlAHIAZQBuAGMAZQAuMAsGCWCGSAGG/WwDFTAfBgNVHSMEGDAWgBQVABIr -->
<!-- E5iymQftHt+ivlcNK2cCzTAdBgNVHQ4EFgQUYVpNJLZJMp1KKnkag0v0HonByn0w -->
<!-- fQYDVR0fBHYwdDA4oDagNIYyaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL0RpZ2lD -->
<!-- ZXJ0QXNzdXJlZElEQ0EtMS5jcmwwOKA2oDSGMmh0dHA6Ly9jcmw0LmRpZ2ljZXJ0 -->
<!-- LmNvbS9EaWdpQ2VydEFzc3VyZWRJRENBLTEuY3JsMHcGCCsGAQUFBwEBBGswaTAk -->
<!-- BggrBgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tMEEGCCsGAQUFBzAC -->
<!-- hjVodHRwOi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNlcnRBc3N1cmVkSURD -->
<!-- QS0xLmNydDANBgkqhkiG9w0BAQUFAAOCAQEAnSV+GzNNsiaBXJuGziMgD4CH5Yj/ -->
<!-- /7HUaiwx7ToXGXEXzakbvFoWOQCd42yE5FpA+94GAYw3+puxnSR+/iCkV61bt5qw -->
<!-- YCbqaVchXTQvH3Gwg5QZBWs1kBCge5fH9j/n4hFBpr1i2fAnPTgdKG86Ugnw7HBi -->
<!-- 02JLsOBzppLA044x2C/jbRcTBu7kA7YUq/OPQ6dxnSHdFMoVXZJB2vkPgdGZdA0m -->
<!-- xA5/G7X1oPHGdwYoFenYk+VVFvC7Cqsc21xIJ2bIo4sKHOWV2q7ELlmgYd3a822i -->
<!-- YemKC23sEhi991VUQAOSK2vCUcIKSK+w1G7g9BQKOhvjjz3Kr2qNe9zYRDCCBs0w -->
<!-- ggW1oAMCAQICEAb9+QOWA63qAArrPye7uhswDQYJKoZIhvcNAQEFBQAwZTELMAkG -->
<!-- A1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRp -->
<!-- Z2ljZXJ0LmNvbTEkMCIGA1UEAxMbRGlnaUNlcnQgQXNzdXJlZCBJRCBSb290IENB -->
<!-- MB4XDTA2MTExMDAwMDAwMFoXDTIxMTExMDAwMDAwMFowYjELMAkGA1UEBhMCVVMx -->
<!-- FTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNv -->
<!-- bTEhMB8GA1UEAxMYRGlnaUNlcnQgQXNzdXJlZCBJRCBDQS0xMIIBIjANBgkqhkiG -->
<!-- 9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6IItmfnKwkKVpYBzQHDSnlZUXKnE0kEGj8kz -->
<!-- /E1FkVyBn+0snPgWWd+etSQVwpi5tHdJ3InECtqvy15r7a2wcTHrzzpADEZNk+yL -->
<!-- ejYIA6sMNP4YSYL+x8cxSIB8HqIPkg5QycaH6zY/2DDD/6b3+6LNb3Mj/qxWBZDw -->
<!-- MiEWicZwiPkFl32jx0PdAug7Pe2xQaPtP77blUjE7h6z8rwMK5nQxl0SQoHhg26C -->
<!-- cz8mSxSQrllmCsSNvtLOBq6thG9IhJtPQLnxTPKvmPv2zkBdXPao8S+v7Iki8msY -->
<!-- ZbHBc63X8djPHgp0XEK4aH631XcKJ1Z8D2KkPzIUYJX9BwSiCQIDAQABo4IDejCC -->
<!-- A3YwDgYDVR0PAQH/BAQDAgGGMDsGA1UdJQQ0MDIGCCsGAQUFBwMBBggrBgEFBQcD -->
<!-- AgYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCDCCAdIGA1UdIASCAckwggHF -->
<!-- MIIBtAYKYIZIAYb9bAABBDCCAaQwOgYIKwYBBQUHAgEWLmh0dHA6Ly93d3cuZGln -->
<!-- aWNlcnQuY29tL3NzbC1jcHMtcmVwb3NpdG9yeS5odG0wggFkBggrBgEFBQcCAjCC -->
<!-- AVYeggFSAEEAbgB5ACAAdQBzAGUAIABvAGYAIAB0AGgAaQBzACAAQwBlAHIAdABp -->
<!-- AGYAaQBjAGEAdABlACAAYwBvAG4AcwB0AGkAdAB1AHQAZQBzACAAYQBjAGMAZQBw -->
<!-- AHQAYQBuAGMAZQAgAG8AZgAgAHQAaABlACAARABpAGcAaQBDAGUAcgB0ACAAQwBQ -->
<!-- AC8AQwBQAFMAIABhAG4AZAAgAHQAaABlACAAUgBlAGwAeQBpAG4AZwAgAFAAYQBy -->
<!-- AHQAeQAgAEEAZwByAGUAZQBtAGUAbgB0ACAAdwBoAGkAYwBoACAAbABpAG0AaQB0 -->
<!-- ACAAbABpAGEAYgBpAGwAaQB0AHkAIABhAG4AZAAgAGEAcgBlACAAaQBuAGMAbwBy -->
<!-- AHAAbwByAGEAdABlAGQAIABoAGUAcgBlAGkAbgAgAGIAeQAgAHIAZQBmAGUAcgBl -->
<!-- AG4AYwBlAC4wCwYJYIZIAYb9bAMVMBIGA1UdEwEB/wQIMAYBAf8CAQAweQYIKwYB -->
<!-- BQUHAQEEbTBrMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5kaWdpY2VydC5jb20w -->
<!-- QwYIKwYBBQUHMAKGN2h0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2Vy -->
<!-- dEFzc3VyZWRJRFJvb3RDQS5jcnQwgYEGA1UdHwR6MHgwOqA4oDaGNGh0dHA6Ly9j -->
<!-- cmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJvb3RDQS5jcmwwOqA4 -->
<!-- oDaGNGh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJv -->
<!-- b3RDQS5jcmwwHQYDVR0OBBYEFBUAEisTmLKZB+0e36K+Vw0rZwLNMB8GA1UdIwQY -->
<!-- MBaAFEXroq/0ksuCMS1Ri6enIZ3zbcgPMA0GCSqGSIb3DQEBBQUAA4IBAQBGUD7J -->
<!-- tygkpzgdtlspr1LPUukxR6tWXHvVDQtBs+/sdR90OPKyXGGinJXDUOSCuSPRujqG -->
<!-- cq04eKx1XRcXNHJHhZRW0eu7NoR3zCSl8wQZVann4+erYs37iy2QwsDStZS9Xk+x -->
<!-- BdIOPRqpFFumhjFiqKgz5Js5p8T1zh14dpQlc+Qqq8+cdkvtX8JLFuRLcEwAiR78 -->
<!-- xXm8TBJX/l/hHrwCXaj++wc4Tw3GXZG5D2dFzdaD7eeSDY2xaYxP+1ngIw/Sqq4A -->
<!-- fO6cQg7PkdcntxbuD8O9fAqg7iwIVYUiuOsYGk38KiGtSTGDR5V3cdyxG0tLHBCc -->
<!-- dxTBnU8vWpUIKRAmMYIETTCCBEkCAQEwgZAwfDELMAkGA1UEBhMCR0IxGzAZBgNV -->
<!-- BAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UE -->
<!-- ChMPU2VjdGlnbyBMaW1pdGVkMSQwIgYDVQQDExtTZWN0aWdvIFJTQSBDb2RlIFNp -->
<!-- Z25pbmcgQ0ECEHZMTnk+Q0g7XRcRg2qSvQEwDQYJYIZIAWUDBAIBBQCgfDAQBgor -->
<!-- BgEEAYI3AgEMMQIwADAZBgkqhkiG9w0BCQMxDAYKKwYBBAGCNwIBBDAcBgorBgEE -->
<!-- AYI3AgELMQ4wDAYKKwYBBAGCNwIBFTAvBgkqhkiG9w0BCQQxIgQgcfi/54f9PbIz -->
<!-- 5kR7JxdCiB/hhEmE0EfTNkVifTcyWGswDQYJKoZIhvcNAQEBBQAEggEADDEcHys7 -->
<!-- n07UwSfc6emN7n/2Cz6hw1/sJ/ZdZOKl3Sg5fgT+Vv38CmRjWUGAvX37Jq8UC8HY -->
<!-- Y9QbPMNk7APQyCTpSdFBtCGob++KM5OMniVUK7CcY1xf/02CT+RbM/rr0U1yCng2 -->
<!-- QtequcsMKiC0s+hDxBzUVlvlTWkcBUxfji68Hb/VQYDqeCU68iikH8MoJM4eD7oa -->
<!-- nUUP3GpdxsTPB/XANho9X2AHleWkNlITVTL6M4fjrT63mcLau9mXfA2TD/cdlpIB -->
<!-- MVpYVOJCXJzfQd3ltXjsxck/7xNlHs/db3GTrIlcUvC33qvLUEy0ec+Ah0QKVk0a -->
<!-- Qq9SMlrBxmZEg6GCAg8wggILBgkqhkiG9w0BCQYxggH8MIIB+AIBATB2MGIxCzAJ -->
<!-- BgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5k -->
<!-- aWdpY2VydC5jb20xITAfBgNVBAMTGERpZ2lDZXJ0IEFzc3VyZWQgSUQgQ0EtMQIQ -->
<!-- AwGaAjr/WLFr1tXq5hfwZjAJBgUrDgMCGgUAoF0wGAYJKoZIhvcNAQkDMQsGCSqG -->
<!-- SIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjAwNjIwMDAwNTA5WjAjBgkqhkiG9w0B -->
<!-- CQQxFgQUquF7lNaRWkuqKtl5fogL3MghZS4wDQYJKoZIhvcNAQEBBQAEggEAW9CW -->
<!-- fWw6OGUne+PbmmvCffQRLRN/D3qhdiBcuPPrsEkPqxnitPDEEq3WkkFSqpnYA9MU -->
<!-- yubelJ4FNkMZV2eSgw8eJp/62L8voZlZGqn4Fpi8Avf5wTNzWZHgkq2DSEjhEDwQ -->
<!-- IFeP71t8DbtViPYdaTD2SEUMaoBhbx/NTvk2NyWIKVS16kPe81/94wbey3XS2oRW -->
<!-- btdpGBDeFHLIlR7YimfirPMG038AjFviG1f88BGf1bjdhVr43hCtMAHR6wyzG1Dl -->
<!-- HWLM0v+uGyVZAyjz5xFVSWUCbDiEk4DNg6MH5myHDuO+7oZregFolb4tYlbxqMzC -->
<!-- thFP1lTMGDFwosVrOA== -->
<!-- SIG # End signature block -->
