<?xml version="1.0" encoding="utf-8"?>
<Configuration>
  <SelectionSets>
    <SelectionSet>
      <Name>AvailableDrivesFromDriveEnclosures</Name>
      <Types>
        <TypeName>HPOneView.Storage.AvailableDiskDrive</TypeName>
      </Types>
    </SelectionSet>
  </SelectionSets>
  <Controls>
    <!--AvailableDrivesFromDriveEnclosures-GroupingFormat-->
    <Control>
      <Name>AvailableDrivesFromDriveEnclosures-GroupingFormat</Name>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <Frame>
                <LeftIndent>4</LeftIndent>
                <CustomItem>
                  <Text>SASLogicalInterconnectName: </Text>
                  <ExpressionBinding>
                    <PropertyName>SASLogicalInterconnectName</PropertyName>
                  </ExpressionBinding>
                  <NewLine/>
                </CustomItem>
              </Frame>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </Control>
  </Controls>
  <ViewDefinitions>
    <!--ManagedSan.Zone FT-->
    <View>
      <Name>ManagedSanZone</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Members</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ManagedSan</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.Members.Name</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--ManagedSan.Zone FL-->
    <View>
      <Name>ManagedSanZone</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SAN</Label>
                <PropertyName>ManagedSAN</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>State</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Members</Label>
                <PropertyName>Members</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Created</Label>
                <PropertyName>Created</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Modified</Label>
                <PropertyName>Modified</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--ManagedSan.Zone.Alias FT-->
    <View>
      <Name>ManagedSanZoneAlias</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone.Alias</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>WWN</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--ManagedSan.Zone.Alias FL-->
    <View>
      <Name>ManagedSanZoneAlias</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan.Zone.Alias</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>WWN</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.San.Endpoint FT-->
    <View>
      <Name>Endpoint</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.San.Endpoint</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Port Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Online</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SAN Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zone Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>wwn</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>portType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>isOnline</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>sanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>zoneName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Profile.SanVolume FT-->
    <View>
      <Name>sanvolumes</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Profile.SanVolume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Volume ID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Volume Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LUN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Pool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>lunType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeStoragePoolUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} GB" -f ($profileCache[$_.volumeUri].provisionedCapacity / 1gb)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].provisionType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($profileCache[$_.volumeUri].shareable) { "{0}" -f "Shared" } else { "{0}" -f "Private" }</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FT-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProvisioningType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StoragePool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SnapshotPool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Used By</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>provisioningType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.isShareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-HPOVRequest -Uri (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
               <TableColumnItem>
                <ScriptBlock>
                if (-not([String]::IsNullOrEmpty($_.deviceSpecificAttributes.snapshotPoolUri)))
                {
                  (Send-HPOVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).name
                }  
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $associationProfileToVol = (Send-HPOVRequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-HPOVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FL-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LunWwn</Label>
                <PropertyName>lunWwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisioningType</Label>
                <PropertyName>provisioningType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisionedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AllocatedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Sharing</Label>
                <ScriptBlock>
                  if ($_.isShareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>(Send-HPOVRequest -Uri (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StoragePool</Label>
                <ScriptBlock>
                  (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SnapshotPool</Label>
                <ScriptBlock>
                  if (-not([String]::IsNullOrEmpty($_.deviceSpecificAttributes.snapshotPoolUri)))
                  {
                    (Send-HPOVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).name
                  }  
                </ScriptBlock>
              </ListItem>                
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>'{0}' -f (Send-HPOVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystemVolumeName</Label>
                <PropertyName>deviceVolumeName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Used By</Label>
                <ScriptBlock>
                  $associationProfileToVol = (Send-HPOVRequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-HPOVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.VolumeTemplate FT-->
    <View>
      <Name>VolumeTemplate</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeTemplate</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProvisionedType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StoragePool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SnapshotPool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.properties.size.default / 1GB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0}' -f $_.properties.provisioningType.default</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.properties.isShareable.default) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.compatibleStorageSystemsUri -Hostname $_.ApplianceConnection.Name).members.displayName</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
               <TableColumnItem>
                <ScriptBlock>
                if (-not([String]::IsNullOrEmpty($_.properties.snapshotPool.default)))
                {
                  (Send-HPOVRequest $_.properties.snapshotPool.default -Hostname $_.ApplianceConnection.Name).name
                }  
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.VolumeTemplate FL-->
    <View>
      <Name>VolumeTemplate</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeTemplate</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisioningType</Label>
                <ScriptBlock>'{0}' -f $_.properties.provisioningType.default</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ProvisionedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.properties.size.default / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Sharing</Label>
                <ScriptBlock>
                  if ($_.properties.isShareable.default) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.compatibleStorageSystemsUri -Hostname $_.ApplianceConnection.Name).members.displayName</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StoragePool</Label>
                <ScriptBlock>"{0}" -f (Send-HPOVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SnapshotPool</Label>
                <ScriptBlock>
                  if (-not([String]::IsNullOrEmpty($_.properties.snapshotPool.default)))
                  {
                    (Send-HPOVRequest $_.properties.snapshotPool.default -Hostname $_.ApplianceConnection.Name).name
                  }  
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystemVolumeName</Label>
                <PropertyName>deviceVolumeName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.VolumeSnapshot FT-->
    <View>
      <Name>StorageVolumeSnapshot</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeSnapshot</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ParentVolume</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-HPOVRequest $_.storageVolumeUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.capacity / 1GB)</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.VolumeSnapshot FL-->
    <View>
      <Name>StorageVolumeSnapshot</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.VolumeSnapshot</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>"{0}" -f $_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Parent Volume</Label>
                <ScriptBlock>(Send-HPOVRequest $_.storageVolumeUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Capacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.capacity / 1GB)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.DiscoveredPool FT-->
    <View>
      <Name>StorageSystemDiscoveredPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.DiscoveredPool</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RAID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Total</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Allocated</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>domain</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>raidLevel</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.DiscoveredPool FL-->
    <View>
      <Name>StorageSystemDiscoveredPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.DiscoveredPool</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-HPOVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DriveType</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Total</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volumes</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?category=storage-volumes&amp;query=storage_volume_storagepool_uri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VolumeTemplates</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?sort=name:asc&amp;category=storage-volume-templates&amp;query=storagePoolUri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.StoragePool FT-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.StoragePool</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RAID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Total</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Allocated</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-HPOVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.StoragePool FL-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.StoragePool</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-HPOVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DriveType</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Total</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volumes</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?category=storage-volumes&amp;query=storage_volume_storagepool_uri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VolumeTemplates</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?sort=name:asc&amp;category=storage-volume-templates&amp;query=storagePoolUri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.SanManager FT-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Managed SANs</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>providerDisplayName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceManagerVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                    $resp = Send-HPOVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                    foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                    $managedSans
                    
                  }

                  else { "None" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.SanManager FL-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>providerDisplayName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Version</Label>
                <PropertyName>deviceManagerVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Managed SANs</Label>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                  $resp = Send-HPOVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                  foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                  $managedSans

                  }

                  else { "None" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View> 
    <!--Storage.ManagedSan FT-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PrincipleSwitch</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Networks</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zoned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>AutomateZoning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ZoningPolicy</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>UseAliases</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>principalSwitch</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.associatedNetworks.name -join ', '</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>zoningState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.sanPolicy.zoningPolicy</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.ManagedSan FL-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PrincipalSwitch</Label>
                <PropertyName>principalSwitch</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Networks</Label>
                <ScriptBlock>$_.associatedNetworks.name -join ', '</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Zoned</Label>
                <PropertyName>zoningState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>AutomateZoning</Label>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ZoningPolicy</Label>
                <ScriptBlock>$_.sanPolicy.zoningPolicy</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Use Aliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System FT-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Family</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ManagedDomain</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Firmware</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
         </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>family</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.serialNumber</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.model</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.managedDomain</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.wwn</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.firmware</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System FL-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ManagedDomain</Label>
                <PropertyName>managedDomain</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Firmware</Label>
                <PropertyName>firmware</PropertyName>
              </ListItem>
              <ListItem>
                <Label>TotalCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.totalCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AllocatedCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.allocatedCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>FreeCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.freeCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>UseAliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.Port FT-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Mode</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ConnectionState</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Address</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ExpectedSAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ActualSAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PortGroup</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$StorageSystemPortModeEnum[$_.mode]</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>connectionState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>protocolType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>expectedSanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>actualSanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>groupName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.Port FL-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>portName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>protocolType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Address</Label>
                <PropertyName>address</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ExpectedNetwork</Label>
                <PropertyName>expectedNetworkName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ActualNetwork</Label>
                <ScriptBlock>
                  if ($_.actualNetworkUri -and (-not($_.actualNetworkUri -eq "unknown")))
                  {
                  $net = Send-HPOVRequest $_.actualNetworkUri -Hostname $_.ApplianceConnection.Name
                  if ($net.fabricType -eq "FabricAttach") {"$($net.name) [FA]"}
                  else {" $($net.name) [DA]"}
                  }
                  else { $_.actualNetworkUri }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PortGroup</Label>
                <PropertyName>groupName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure FT-->
    <View>
      <Name>DriveEnclosure</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveBays</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>I/OAdapters</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>powerState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ioAdapterCount</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure FL-->
    <View>
      <Name>DriveEnclosure</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>powerState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DriveBays</Label>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>I/OAdapters</Label>
                <PropertyName>ioAdapterCount</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>

    <!--Storage.DriveEnclosure.IoAdapter FT-->
    <View>
      <Name>DriveEnclosureIoAdapter</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.IoAdapter</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveBays</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>I/OAdapters</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>powerState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ioAdapterCount</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.IoAdapter FL-->
    <View>
      <Name>DriveEnclosureIoAdapter</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.IoAdapter</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>powerState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DriveBays</Label>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>I/OAdapters</Label>
                <PropertyName>ioAdapterCount</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay FT-->
    <View>
      <Name>DriveBay</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Drive</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.drive.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay FL-->
    <View>
      <Name>DriveBay</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Drive</Label>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.drive.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay.Drive FT-->
    <View>
      <Name>DriveBayDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay.Drive</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Firmware</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>firmwareVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay.Drive FL-->
    <View>
      <Name>DriveBayDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.DriveEnclosure.DriveBay.Drive</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Interface</Label>
                <PropertyName>deviceInterface</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>driveMedia</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Connectivity</Label>
                <ScriptBlock>'{0}Gbps' -f $_.linkRateInGbs</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>rotationalRpms</Label>
                <ScriptBlock>'{0:00}K' -f ($_.rotationalRpms / 1000)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Drive</Label>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Firmware</Label>
                <PropertyName>firmwareVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.AvailableDiskDrive FT-->
    <View>
      <Name>AvailableDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.AvailableDiskDrive</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>type</PropertyName>
        <CustomControlName>AvailableDrivesFromDriveEnclosures-GroupingFormat</CustomControlName>
      </GroupBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NumberAvailable</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Type</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Capacity</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NumberAvailable</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!-- HPOneView.Storage.LogicalJBOD FT-->
    <View>
      <Name>LogicalJBOD</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.LogicalJBOD</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveTechnology</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MinSize</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MaxSize</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>UsedBy</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Drives</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} {1}" -f $_.Interface, $_.Media</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.MinSize * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.MaxSize * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>UsedBy</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Drives</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View> 
    <!-- HPOneView.Storage.Drive FT-->
    <View>
      <Name>Drive</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Drive</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LogicalJbodName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SerialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.Capacity * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LogicalJbodName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View> 
    <!-- HPOneView.Storage.AvailableDriveType FT-->
    <View>
      <Name>AvailableDriveType</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.AvailableDriveType</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SASLogicalInterconnectName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NumberAvailable</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>SASLogicalInterconnectName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Type</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPOneView.Utilities.Library]::IntToStorageString(([int]$_.Capacity * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NumberAvailable</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View> 



  </ViewDefinitions>
</Configuration>
<!-- SIG # Begin signature block -->
<!-- MIIjEQYJKoZIhvcNAQcCoIIjAjCCIv4CAQExDzANBglghkgBZQMEAgEFADB5Bgor -->
<!-- BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG -->
<!-- KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCCWl908eSQ5H2L6 -->
<!-- RxRvqnyz85O06rQ/tnV9aQXzC6RB06CCHhkwggViMIIESqADAgECAhEAs27OX4Af -->
<!-- AEtqySFw10d4pTANBgkqhkiG9w0BAQsFADB8MQswCQYDVQQGEwJHQjEbMBkGA1UE -->
<!-- CBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRgwFgYDVQQK -->
<!-- Ew9TZWN0aWdvIExpbWl0ZWQxJDAiBgNVBAMTG1NlY3RpZ28gUlNBIENvZGUgU2ln -->
<!-- bmluZyBDQTAeFw0xOTA2MTgwMDAwMDBaFw0yMDA2MTcyMzU5NTlaMIHSMQswCQYD -->
<!-- VQQGEwJVUzEOMAwGA1UEEQwFOTQzMDQxCzAJBgNVBAgMAkNBMRIwEAYDVQQHDAlQ -->
<!-- YWxvIEFsdG8xHDAaBgNVBAkMEzMwMDAgSGFub3ZlciBTdHJlZXQxKzApBgNVBAoM -->
<!-- Ikhld2xldHQgUGFja2FyZCBFbnRlcnByaXNlIENvbXBhbnkxGjAYBgNVBAsMEUhQ -->
<!-- IEN5YmVyIFNlY3VyaXR5MSswKQYDVQQDDCJIZXdsZXR0IFBhY2thcmQgRW50ZXJw -->
<!-- cmlzZSBDb21wYW55MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApRUr -->
<!-- B4sxRxmcELIDQloMK5Trsf6NaV53CZlnWquI9hoSn1D14KyzII0V3/GGSrzefd4U -->
<!-- O2NMhi6XuK00Lp/cxiJEk5Y5gCUrOWj7rNrH/4ibHUitPle1gEStxkyAduxLSRU5 -->
<!-- O66hdsOcE6N5YxN1OTIjd7IfPsB/TYgfzoJWi2TgpnQbnpAZ6rX+J7E16t0nyhw7 -->
<!-- o29Vs+DBF3UnRo5yO9wlF+gnkEQGC33TRc7k1I1aGut+nrYJcSKbKb7xMdWzpnME -->
<!-- al3mCKhwEyPOwiuF6GRj8QUvixzv1kK1MPfJv4SndHzNtmPNT+2lN6sei9/b+fDd -->
<!-- hwp57blr1uPzMvJMEwIDAQABo4IBhjCCAYIwHwYDVR0jBBgwFoAUDuE6qFM6MdWK -->
<!-- vsG7rWcaA4WtNA4wHQYDVR0OBBYEFEWEX+dAgNu/+qq8wUXDWBCEEg2wMA4GA1Ud -->
<!-- DwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMBEG -->
<!-- CWCGSAGG+EIBAQQEAwIEEDBABgNVHSAEOTA3MDUGDCsGAQQBsjEBAgEDAjAlMCMG -->
<!-- CCsGAQUFBwIBFhdodHRwczovL3NlY3RpZ28uY29tL0NQUzBDBgNVHR8EPDA6MDig -->
<!-- NqA0hjJodHRwOi8vY3JsLnNlY3RpZ28uY29tL1NlY3RpZ29SU0FDb2RlU2lnbmlu -->
<!-- Z0NBLmNybDBzBggrBgEFBQcBAQRnMGUwPgYIKwYBBQUHMAKGMmh0dHA6Ly9jcnQu -->
<!-- c2VjdGlnby5jb20vU2VjdGlnb1JTQUNvZGVTaWduaW5nQ0EuY3J0MCMGCCsGAQUF -->
<!-- BzABhhdodHRwOi8vb2NzcC5zZWN0aWdvLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEA -->
<!-- QN9rx8jPwCq7rN0jhoey1CZqKiacvgYtr6+/zB0qxhxhmIXvMrKcthVLAb/vp+hi -->
<!-- ipqZXj9ZEp8wlEkz9PVzgHqXVJ/zIA95b16/pwX6mvFq2CgKP8YfuYLRQzok4vfY -->
<!-- KqtEjpB8UFkbSBeFSjhu0ryNxOWr9JAqnmgLEmvJNk1KvVCm4jBnxyRC2Ht/GWve -->
<!-- MnlEwxbP+vCfB/xVfADj5j/6/m9ZcZKIKPg1rJho89psn61Yck5+Jv/4ocaaQfaV -->
<!-- GdiKuVxDADPmj6bQ6cRk9wXrms+gdPloTD/f+LY3sh0GD3DiXFqq/rhhQVKfgE2L -->
<!-- ToRlMVn6V/MtlWl1PsfyPzCCBXcwggRfoAMCAQICEBPqKHBb9OztDDZjCYBhQzYw -->
<!-- DQYJKoZIhvcNAQEMBQAwbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0 -->
<!-- IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAG -->
<!-- A1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9vdDAeFw0wMDA1MzAxMDQ4Mzha -->
<!-- Fw0yMDA1MzAxMDQ4MzhaMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMKTmV3IEpl -->
<!-- cnNleTEUMBIGA1UEBxMLSmVyc2V5IENpdHkxHjAcBgNVBAoTFVRoZSBVU0VSVFJV -->
<!-- U1QgTmV0d29yazEuMCwGA1UEAxMlVVNFUlRydXN0IFJTQSBDZXJ0aWZpY2F0aW9u -->
<!-- IEF1dGhvcml0eTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAIASZRc2 -->
<!-- DsPbCLPQrFcNdu3NJ9NMrVCDYeKqIE0JLWQJ3M6Jn8w9qez2z8Hc8dOx1ns3KBEr -->
<!-- R9o5xrw6GbRfpr19naNjQrZ28qk7K5H44m/Q7BYgkAk+4uh0yRi0kdRiZNt/owbx -->
<!-- iBhqkCI8vP4T8IcUe/bkH47U5FHGEWdGCFHLhhRUP7wz/n5snP8WnRi9UY41pqdm -->
<!-- yHJn2yFmsdSbeAPAUDrozPDcvJ5M/q8FljUfV1q3/875PbcstvZU3cjnEjpNrkyK -->
<!-- t1yatLcgPcp/IjSufjtoZgFE5wFORlObM2D3lL5TN5BzQ/Myw1Pv26r+dE5px2uM -->
<!-- YJPexMcM3+EyrsyTO1F4lWeL7j1W/gzQaQ8bD/MlJmszbfduR/pzQ+V+DqVmsSl8 -->
<!-- MoRjVYnEDcGTVDAZE6zTfTen6106bDVc20HXEtqpSQvf2ICKCZNijrVmzyWIzYS4 -->
<!-- sT+kOQ/ZAp7rEkyVfPNrBaleFoPMuGfi6BOdzFuC00yz7Vv/3uVzrCM7LQC/NVV0 -->
<!-- CUnYSVgaf5I25lGSDvMmfRxNF7zJ7EMm0L9BX0CpRET0medXh55QH1dUqD79dGMv -->
<!-- sVBlCeZYQi5DGky08CVHWfoEHpPUJkZKUIGy3r54t/xnFeHJV4QeD2PW6WK61l9V -->
<!-- LupcxigIBCU5uA4rqfJMlxwHPw1S9e3vL4IPAgMBAAGjgfQwgfEwHwYDVR0jBBgw -->
<!-- FoAUrb2YejS0Jvf6xCZU7wO94CTLVBowHQYDVR0OBBYEFFN5v1qqK0rPVIDh2JvA -->
<!-- nfKyA2bLMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MBEGA1UdIAQK -->
<!-- MAgwBgYEVR0gADBEBgNVHR8EPTA7MDmgN6A1hjNodHRwOi8vY3JsLnVzZXJ0cnVz -->
<!-- dC5jb20vQWRkVHJ1c3RFeHRlcm5hbENBUm9vdC5jcmwwNQYIKwYBBQUHAQEEKTAn -->
<!-- MCUGCCsGAQUFBzABhhlodHRwOi8vb2NzcC51c2VydHJ1c3QuY29tMA0GCSqGSIb3 -->
<!-- DQEBDAUAA4IBAQCTZfY3g5UPXsOCHB/Wd+c8isCqCfDpCybx4MJqdaHHecm5UmDI -->
<!-- KRIO8K0D1gnEdt/lpoGVp0bagleplZLFto8DImwzd8F7MhduB85aFEE6BSQb9hQG -->
<!-- O6glJA67zCp13blwQT980GM2IQcfRv9gpJHhZ7zeH34ZFMljZ5HqZwdrtI+LwG5D -->
<!-- fcOhgGyyHrxThX3ckKGkvC3vRnJXNQW/u0a7bm03mbb/I5KRxm5A+I8pVupf1V8U -->
<!-- U6zwT2Hq9yLMp1YL4rg0HybZexkFaD+6PNQ4BqLT5o8O47RxbUBCxYS0QJUr9GWg -->
<!-- SHn2HYFjlp1PdeD4fOSOqdHyrYqzjMchzcLvMIIF9TCCA92gAwIBAgIQHaJIMG+b -->
<!-- JhjQguCWfTPTajANBgkqhkiG9w0BAQwFADCBiDELMAkGA1UEBhMCVVMxEzARBgNV -->
<!-- BAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVU -->
<!-- aGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2Vy -->
<!-- dGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTgxMTAyMDAwMDAwWhcNMzAxMjMxMjM1 -->
<!-- OTU5WjB8MQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVy -->
<!-- MRAwDgYDVQQHEwdTYWxmb3JkMRgwFgYDVQQKEw9TZWN0aWdvIExpbWl0ZWQxJDAi -->
<!-- BgNVBAMTG1NlY3RpZ28gUlNBIENvZGUgU2lnbmluZyBDQTCCASIwDQYJKoZIhvcN -->
<!-- AQEBBQADggEPADCCAQoCggEBAIYijTKFehifSfCWL2MIHi3cfJ8Uz+MmtiVmKUCG -->
<!-- VEZ0MWLFEO2yhyemmcuVMMBW9aR1xqkOUGKlUZEQauBLYq798PgYrKf/7i4zIPoM -->
<!-- GYmobHutAMNhodxpZW0fbieW15dRhqb0J+V8aouVHltg1X7XFpKcAC9o95ftanK+ -->
<!-- ODtj3o+/bkxBXRIgCFnoOc2P0tbPBrRXBbZOoT5Xax+YvMRi1hsLjcdmG0qfnYHE -->
<!-- ckC14l/vC0X/o84Xpi1VsLewvFRqnbyNVlPG8Lp5UEks9wO5/i9lNfIi6iwHr0bZ -->
<!-- +UYc3Ix8cSjz/qfGFN1VkW6KEQ3fBiSVfQ+noXw62oY1YdMCAwEAAaOCAWQwggFg -->
<!-- MB8GA1UdIwQYMBaAFFN5v1qqK0rPVIDh2JvAnfKyA2bLMB0GA1UdDgQWBBQO4Tqo -->
<!-- Uzox1Yq+wbutZxoDha00DjAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0TAQH/BAgwBgEB -->
<!-- /wIBADAdBgNVHSUEFjAUBggrBgEFBQcDAwYIKwYBBQUHAwgwEQYDVR0gBAowCDAG -->
<!-- BgRVHSAAMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwudXNlcnRydXN0LmNv -->
<!-- bS9VU0VSVHJ1c3RSU0FDZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDB2BggrBgEF -->
<!-- BQcBAQRqMGgwPwYIKwYBBQUHMAKGM2h0dHA6Ly9jcnQudXNlcnRydXN0LmNvbS9V -->
<!-- U0VSVHJ1c3RSU0FBZGRUcnVzdENBLmNydDAlBggrBgEFBQcwAYYZaHR0cDovL29j -->
<!-- c3AudXNlcnRydXN0LmNvbTANBgkqhkiG9w0BAQwFAAOCAgEATWNQ7Uc0SmGk295q -->
<!-- Koyb8QAAHh1iezrXMsL2s+Bjs/thAIiaG20QBwRPvrjqiXgi6w9G7PNGXkBGiRL0 -->
<!-- C3danCpBOvzW9Ovn9xWVM8Ohgyi33i/klPeFM4MtSkBIv5rCT0qxjyT0s4E307dk -->
<!-- sKYjalloUkJf/wTr4XRleQj1qZPea3FAmZa6ePG5yOLDCBaxq2NayBWAbXReSnV+ -->
<!-- pbjDbLXP30p5h1zHQE1jNfYw08+1Cg4LBH+gS667o6XQhACTPlNdNKUANWlsvp8g -->
<!-- JRANGftQkGG+OY96jk32nw4e/gdREmaDJhlIlc5KycF/8zoFm/lv34h/wCOe0h5D -->
<!-- ekUxwZxNqfBZslkZ6GqNKQQCd3xLS81wvjqyVVp4Pry7bwMQJXcVNIr5NsxDkuS6 -->
<!-- T/FikyglVyn7URnHoSVAaoRXxrKdsbwcCtp8Z359LukoTBh+xHsxQXGaSynsCz1X -->
<!-- UNLK3f2eBVHlRHjdAd6xdZgNVCT98E7j4viDvXK6yz067vBeF5Jobchh+abxKgoL -->
<!-- pbn0nu6YMgWFnuv5gynTxix9vTp3Los3QqBqgu07SqqUEKThDfgXxbZaeTMYkuO1 -->
<!-- dfih6Y4KJR7kHvGfWocj/5+kUZ77OYARzdu1xKeogG/lU9Tg46LC0lsa+jImLWpX -->
<!-- cBw8pFguo/NbSwfcMlnzh6cabVgwggZqMIIFUqADAgECAhADAZoCOv9YsWvW1erm -->
<!-- F/BmMA0GCSqGSIb3DQEBBQUAMGIxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdp -->
<!-- Q2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xITAfBgNVBAMTGERp -->
<!-- Z2lDZXJ0IEFzc3VyZWQgSUQgQ0EtMTAeFw0xNDEwMjIwMDAwMDBaFw0yNDEwMjIw -->
<!-- MDAwMDBaMEcxCzAJBgNVBAYTAlVTMREwDwYDVQQKEwhEaWdpQ2VydDElMCMGA1UE -->
<!-- AxMcRGlnaUNlcnQgVGltZXN0YW1wIFJlc3BvbmRlcjCCASIwDQYJKoZIhvcNAQEB -->
<!-- BQADggEPADCCAQoCggEBAKNkXfx8s+CCNeDg9sYq5kl1O8xu4FOpnx9kWeZ8a39r -->
<!-- jJ1V+JLjntVaY1sCSVDZg85vZu7dy4XpX6X51Id0iEQ7Gcnl9ZGfxhQ5rCTqqEss -->
<!-- kYnMXij0ZLZQt/USs3OWCmejvmGfrvP9Enh1DqZbFP1FI46GRFV9GIYFjFWHeUhG -->
<!-- 98oOjafeTl/iqLYtWQJhiGFyGGi5uHzu5uc0LzF3gTAfuzYBje8n4/ea8EwxZI3j -->
<!-- 6/oZh6h+z+yMDDZbesF6uHjHyQYuRhDIjegEYNu8c3T6Ttj+qkDxss5wRoPp2kCh -->
<!-- WTrZFQlXmVYwk/PJYczQCMxr7GJCkawCwO+k8IkRj3cCAwEAAaOCAzUwggMxMA4G -->
<!-- A1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQMMAoGCCsGAQUF -->
<!-- BwMIMIIBvwYDVR0gBIIBtjCCAbIwggGhBglghkgBhv1sBwEwggGSMCgGCCsGAQUF -->
<!-- BwIBFhxodHRwczovL3d3dy5kaWdpY2VydC5jb20vQ1BTMIIBZAYIKwYBBQUHAgIw -->
<!-- ggFWHoIBUgBBAG4AeQAgAHUAcwBlACAAbwBmACAAdABoAGkAcwAgAEMAZQByAHQA -->
<!-- aQBmAGkAYwBhAHQAZQAgAGMAbwBuAHMAdABpAHQAdQB0AGUAcwAgAGEAYwBjAGUA -->
<!-- cAB0AGEAbgBjAGUAIABvAGYAIAB0AGgAZQAgAEQAaQBnAGkAQwBlAHIAdAAgAEMA -->
<!-- UAAvAEMAUABTACAAYQBuAGQAIAB0AGgAZQAgAFIAZQBsAHkAaQBuAGcAIABQAGEA -->
<!-- cgB0AHkAIABBAGcAcgBlAGUAbQBlAG4AdAAgAHcAaABpAGMAaAAgAGwAaQBtAGkA -->
<!-- dAAgAGwAaQBhAGIAaQBsAGkAdAB5ACAAYQBuAGQAIABhAHIAZQAgAGkAbgBjAG8A -->
<!-- cgBwAG8AcgBhAHQAZQBkACAAaABlAHIAZQBpAG4AIABiAHkAIAByAGUAZgBlAHIA -->
<!-- ZQBuAGMAZQAuMAsGCWCGSAGG/WwDFTAfBgNVHSMEGDAWgBQVABIrE5iymQftHt+i -->
<!-- vlcNK2cCzTAdBgNVHQ4EFgQUYVpNJLZJMp1KKnkag0v0HonByn0wfQYDVR0fBHYw -->
<!-- dDA4oDagNIYyaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0QXNzdXJl -->
<!-- ZElEQ0EtMS5jcmwwOKA2oDSGMmh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdp -->
<!-- Q2VydEFzc3VyZWRJRENBLTEuY3JsMHcGCCsGAQUFBwEBBGswaTAkBggrBgEFBQcw -->
<!-- AYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tMEEGCCsGAQUFBzAChjVodHRwOi8v -->
<!-- Y2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNlcnRBc3N1cmVkSURDQS0xLmNydDAN -->
<!-- BgkqhkiG9w0BAQUFAAOCAQEAnSV+GzNNsiaBXJuGziMgD4CH5Yj//7HUaiwx7ToX -->
<!-- GXEXzakbvFoWOQCd42yE5FpA+94GAYw3+puxnSR+/iCkV61bt5qwYCbqaVchXTQv -->
<!-- H3Gwg5QZBWs1kBCge5fH9j/n4hFBpr1i2fAnPTgdKG86Ugnw7HBi02JLsOBzppLA -->
<!-- 044x2C/jbRcTBu7kA7YUq/OPQ6dxnSHdFMoVXZJB2vkPgdGZdA0mxA5/G7X1oPHG -->
<!-- dwYoFenYk+VVFvC7Cqsc21xIJ2bIo4sKHOWV2q7ELlmgYd3a822iYemKC23sEhi9 -->
<!-- 91VUQAOSK2vCUcIKSK+w1G7g9BQKOhvjjz3Kr2qNe9zYRDCCBs0wggW1oAMCAQIC -->
<!-- EAb9+QOWA63qAArrPye7uhswDQYJKoZIhvcNAQEFBQAwZTELMAkGA1UEBhMCVVMx -->
<!-- FTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNv -->
<!-- bTEkMCIGA1UEAxMbRGlnaUNlcnQgQXNzdXJlZCBJRCBSb290IENBMB4XDTA2MTEx -->
<!-- MDAwMDAwMFoXDTIxMTExMDAwMDAwMFowYjELMAkGA1UEBhMCVVMxFTATBgNVBAoT -->
<!-- DERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTEhMB8GA1UE -->
<!-- AxMYRGlnaUNlcnQgQXNzdXJlZCBJRCBDQS0xMIIBIjANBgkqhkiG9w0BAQEFAAOC -->
<!-- AQ8AMIIBCgKCAQEA6IItmfnKwkKVpYBzQHDSnlZUXKnE0kEGj8kz/E1FkVyBn+0s -->
<!-- nPgWWd+etSQVwpi5tHdJ3InECtqvy15r7a2wcTHrzzpADEZNk+yLejYIA6sMNP4Y -->
<!-- SYL+x8cxSIB8HqIPkg5QycaH6zY/2DDD/6b3+6LNb3Mj/qxWBZDwMiEWicZwiPkF -->
<!-- l32jx0PdAug7Pe2xQaPtP77blUjE7h6z8rwMK5nQxl0SQoHhg26Ccz8mSxSQrllm -->
<!-- CsSNvtLOBq6thG9IhJtPQLnxTPKvmPv2zkBdXPao8S+v7Iki8msYZbHBc63X8djP -->
<!-- Hgp0XEK4aH631XcKJ1Z8D2KkPzIUYJX9BwSiCQIDAQABo4IDejCCA3YwDgYDVR0P -->
<!-- AQH/BAQDAgGGMDsGA1UdJQQ0MDIGCCsGAQUFBwMBBggrBgEFBQcDAgYIKwYBBQUH -->
<!-- AwMGCCsGAQUFBwMEBggrBgEFBQcDCDCCAdIGA1UdIASCAckwggHFMIIBtAYKYIZI -->
<!-- AYb9bAABBDCCAaQwOgYIKwYBBQUHAgEWLmh0dHA6Ly93d3cuZGlnaWNlcnQuY29t -->
<!-- L3NzbC1jcHMtcmVwb3NpdG9yeS5odG0wggFkBggrBgEFBQcCAjCCAVYeggFSAEEA -->
<!-- bgB5ACAAdQBzAGUAIABvAGYAIAB0AGgAaQBzACAAQwBlAHIAdABpAGYAaQBjAGEA -->
<!-- dABlACAAYwBvAG4AcwB0AGkAdAB1AHQAZQBzACAAYQBjAGMAZQBwAHQAYQBuAGMA -->
<!-- ZQAgAG8AZgAgAHQAaABlACAARABpAGcAaQBDAGUAcgB0ACAAQwBQAC8AQwBQAFMA -->
<!-- IABhAG4AZAAgAHQAaABlACAAUgBlAGwAeQBpAG4AZwAgAFAAYQByAHQAeQAgAEEA -->
<!-- ZwByAGUAZQBtAGUAbgB0ACAAdwBoAGkAYwBoACAAbABpAG0AaQB0ACAAbABpAGEA -->
<!-- YgBpAGwAaQB0AHkAIABhAG4AZAAgAGEAcgBlACAAaQBuAGMAbwByAHAAbwByAGEA -->
<!-- dABlAGQAIABoAGUAcgBlAGkAbgAgAGIAeQAgAHIAZQBmAGUAcgBlAG4AYwBlAC4w -->
<!-- CwYJYIZIAYb9bAMVMBIGA1UdEwEB/wQIMAYBAf8CAQAweQYIKwYBBQUHAQEEbTBr -->
<!-- MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5kaWdpY2VydC5jb20wQwYIKwYBBQUH -->
<!-- MAKGN2h0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJ -->
<!-- RFJvb3RDQS5jcnQwgYEGA1UdHwR6MHgwOqA4oDaGNGh0dHA6Ly9jcmwzLmRpZ2lj -->
<!-- ZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJvb3RDQS5jcmwwOqA4oDaGNGh0dHA6 -->
<!-- Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJvb3RDQS5jcmww -->
<!-- HQYDVR0OBBYEFBUAEisTmLKZB+0e36K+Vw0rZwLNMB8GA1UdIwQYMBaAFEXroq/0 -->
<!-- ksuCMS1Ri6enIZ3zbcgPMA0GCSqGSIb3DQEBBQUAA4IBAQBGUD7Jtygkpzgdtlsp -->
<!-- r1LPUukxR6tWXHvVDQtBs+/sdR90OPKyXGGinJXDUOSCuSPRujqGcq04eKx1XRcX -->
<!-- NHJHhZRW0eu7NoR3zCSl8wQZVann4+erYs37iy2QwsDStZS9Xk+xBdIOPRqpFFum -->
<!-- hjFiqKgz5Js5p8T1zh14dpQlc+Qqq8+cdkvtX8JLFuRLcEwAiR78xXm8TBJX/l/h -->
<!-- HrwCXaj++wc4Tw3GXZG5D2dFzdaD7eeSDY2xaYxP+1ngIw/Sqq4AfO6cQg7Pkdcn -->
<!-- txbuD8O9fAqg7iwIVYUiuOsYGk38KiGtSTGDR5V3cdyxG0tLHBCcdxTBnU8vWpUI -->
<!-- KRAmMYIETjCCBEoCAQEwgZEwfDELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0 -->
<!-- ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGln -->
<!-- byBMaW1pdGVkMSQwIgYDVQQDExtTZWN0aWdvIFJTQSBDb2RlIFNpZ25pbmcgQ0EC -->
<!-- EQCzbs5fgB8AS2rJIXDXR3ilMA0GCWCGSAFlAwQCAQUAoHwwEAYKKwYBBAGCNwIB -->
<!-- DDECMAAwGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEO -->
<!-- MAwGCisGAQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEIHH4v+eH/T2yM+ZEeycXQogf -->
<!-- 4YRJhNBH0zZFYn03MlhrMA0GCSqGSIb3DQEBAQUABIIBAAYZ4txs4uoRUUYm+p+i -->
<!-- erwzOI1LNuqk2nPuga6SOhbjyX+YMQknqoK4Xyrs/UmyxR3lIRVvN9yXUqfok2GE -->
<!-- yMRaIZJwK00fYpgUt8oS8q58e/BiNpoVTVGonCcUrFzm85SdRDW1kY8NaWVcCuOA -->
<!-- v3AoGqMRBTc41EfSNTMYx08d9KnaKmYODQz8CLAE0LmrVBKFKb+wVSnyyHpcAFcC -->
<!-- HwxQx3CQdpy25eZbQQzQbbfNg2dLcdGW1hRPBVjEmizhMVxfuNheC1qOX358qZbR -->
<!-- GA9BXJEMMjwMOON7oGV9sAOerK8a4qExtWc2lNz5pN5ujXho3pKL06UnIY6H0zz5 -->
<!-- +kihggIPMIICCwYJKoZIhvcNAQkGMYIB/DCCAfgCAQEwdjBiMQswCQYDVQQGEwJV -->
<!-- UzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu -->
<!-- Y29tMSEwHwYDVQQDExhEaWdpQ2VydCBBc3N1cmVkIElEIENBLTECEAMBmgI6/1ix -->
<!-- a9bV6uYX8GYwCQYFKw4DAhoFAKBdMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEw -->
<!-- HAYJKoZIhvcNAQkFMQ8XDTIwMDQyNzIzMTg0MlowIwYJKoZIhvcNAQkEMRYEFLKh -->
<!-- 6K6yksh0rFXNccpZ5TB9C3DIMA0GCSqGSIb3DQEBAQUABIIBAEyf+KBhr/yziw5a -->
<!-- B6w9Je2w8dPnyOzg8bxhR7Pdx3YssgGbNedU4wDoi9Yx05O9jmbtMvhliqQY9tUM -->
<!-- TQ0TQ7UOYISLR2my2E28JqzH8siA7+2HWTYitnNBpeTVjsjVtRebImcHh8yP3PMY -->
<!-- nOM8WxpylsiUfpg7JVe0lvkmi0pGFS+r6Vdpibci7lrN2i3+KaoOBfcWtyxOLWjg -->
<!-- eFMj0SoV1tpOKIreH1YDBe3c1vR5dLUfig9ZxwvLUlAaPWXHNRQGTLGCOXWsBa7t -->
<!-- bVa/M59sI7evbit3yPWoy4gN9lbtC3NQBkqo602p45SkBBLlRwjeewIzaBYy+09A -->
<!-- J+M4Q9c= -->
<!-- SIG # End signature block -->
